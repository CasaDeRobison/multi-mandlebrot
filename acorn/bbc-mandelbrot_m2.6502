ORG $2000

.start
   jmp main

INCLUDE "mandelbrot.6502"

ZP_PTR            = $50
ZP_SCRATCH        = $52

CRTC_REG_ADDR     = $FE00
CRTC_REG_DATA     = $FE01
VIDEO_ULA_CTRL    = $FE20
VIDEO_ULA_PAL     = $FE21
SCREEN_MAP        = $3000

MODE_2            = $F4

.crtc_cfg
   EQUB $7F,$50,$62,$28,$26,$00
   EQUB $20,$22,$01,$07,$67,$08

.palette
   EQUB $07,$16,$25,$34,$43,$52,$61,$70
   EQUB $8F,$9E,$AD,$BC,$CB,$DA,$E9,$F8


.i_result EQUB 0

.color_codes
   EQUB $3F,$03,$0C,$0F   ; white, red, green, yellow
   EQUB $30,$33,$3C       ; blue, magenta, cyan
   EQUB $3F,$03,$0C,$0F   ; white, red, green, yellow
   EQUB $30,$33,$3C,$00   ; blue, magenta, cyan, black

.*main
{
   lda #MODE_2
   sta VIDEO_ULA_CTRL
   ldx #0
.crtc_loop
   stx CRTC_REG_ADDR
   lda crtc_cfg,x
   sta CRTC_REG_DATA
   inx
   cpx #12
   bne crtc_loop
   ldx #0
.ula_loop
   lda .palette,x
   sta VIDEO_ULA_PAL
   inx
   cpx #16
   bne ula_loop
   ldx #0
   ldy #0
.loop
   lda mand_max_it
   jsr mand_get
   sta i_result
   txa
   pha ; preserve X
   tya
   pha ; preserve Y
   lda #<SCREEN_MAP
   sta ZP_PTR
   lda #>SCREEN_MAP
   sta ZP_PTR+1
   tya
   sta ZP_SCRATCH
   lda #0
   sta ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   lda ZP_PTR
   clc
   adc ZP_SCRATCH
   sta ZP_PTR
   lda ZP_PTR+1
   adc ZP_SCRATCH+1
   sta ZP_PTR+1      ; ZP_PTR = SCREEN_MAP+Y*$80
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   lda ZP_PTR
   clc
   adc ZP_SCRATCH
   sta ZP_PTR
   lda ZP_PTR+1
   adc ZP_SCRATCH+1
   sta ZP_PTR+1      ; ZP_PTR = SCREEN_MAP+Y*$280
   txa
   sta ZP_SCRATCH
   lda #0
   sta ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   asl ZP_SCRATCH
   rol ZP_SCRATCH+1
   lda ZP_PTR
   clc
   adc ZP_SCRATCH
   sta ZP_PTR
   lda ZP_PTR+1
   adc ZP_SCRATCH+1
   sta ZP_PTR+1      ; ZP_PTR = SCREEN_MAP+Y*$280+X*$10
   ldx i_result
   lda color_codes,x
   ldy #0
.pix_loop
   sta (ZP_PTR),y
   iny
   cpy #16
   bne pix_loop
   pla
   tay ; restore Y
   pla
   tax ; restore X
   inx
   cpx mand_width
   beq nexty
   jmp loop
.nexty
   ldx #0
   iny
   cpy mand_height
   beq done
   jmp loop
.done
   ; place READY prompt?
   rts
}

.end

SAVE "man", start, end
